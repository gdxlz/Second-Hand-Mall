<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.hzf.repository.TimeRecordMapper" >
  <resultMap id="BaseResultMap" type="com.hzf.entity.TimeRecord" >
    <id column="record_id" property="recordId" jdbcType="INTEGER" />
    <result column="good_id" property="goodId" jdbcType="INTEGER" />
    <result column="uptime" property="uptime" jdbcType="TIMESTAMP" />
    <result column="downtime" property="downtime" jdbcType="TIMESTAMP" />
    <result column="sailtime" property="sailtime" jdbcType="TIMESTAMP" />
    <result column="buyer_id" property="buyerId" jdbcType="INTEGER" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    record_id, good_id, uptime, downtime, sailtime, buyer_id
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.hzf.entity.TimeRecordExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from time_record
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from time_record
    where record_id = #{recordId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from time_record
    where record_id = #{recordId,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.hzf.entity.TimeRecordExample" >
    delete from time_record
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.hzf.entity.TimeRecord" >
    insert into time_record (record_id, good_id, uptime, 
      downtime, sailtime, buyer_id
      )
    values (#{recordId,jdbcType=INTEGER}, #{goodId,jdbcType=INTEGER}, #{uptime,jdbcType=TIMESTAMP}, 
      #{downtime,jdbcType=TIMESTAMP}, #{sailtime,jdbcType=TIMESTAMP}, #{buyerId,jdbcType=INTEGER}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.hzf.entity.TimeRecord" >
    insert into time_record
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="recordId != null" >
        record_id,
      </if>
      <if test="goodId != null" >
        good_id,
      </if>
      <if test="uptime != null" >
        uptime,
      </if>
      <if test="downtime != null" >
        downtime,
      </if>
      <if test="sailtime != null" >
        sailtime,
      </if>
      <if test="buyerId != null" >
        buyer_id,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="recordId != null" >
        #{recordId,jdbcType=INTEGER},
      </if>
      <if test="goodId != null" >
        #{goodId,jdbcType=INTEGER},
      </if>
      <if test="uptime != null" >
        #{uptime,jdbcType=TIMESTAMP},
      </if>
      <if test="downtime != null" >
        #{downtime,jdbcType=TIMESTAMP},
      </if>
      <if test="sailtime != null" >
        #{sailtime,jdbcType=TIMESTAMP},
      </if>
      <if test="buyerId != null" >
        #{buyerId,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.hzf.entity.TimeRecordExample" resultType="java.lang.Integer" >
    select count(*) from time_record
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update time_record
    <set >
      <if test="record.recordId != null" >
        record_id = #{record.recordId,jdbcType=INTEGER},
      </if>
      <if test="record.goodId != null" >
        good_id = #{record.goodId,jdbcType=INTEGER},
      </if>
      <if test="record.uptime != null" >
        uptime = #{record.uptime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.downtime != null" >
        downtime = #{record.downtime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.sailtime != null" >
        sailtime = #{record.sailtime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.buyerId != null" >
        buyer_id = #{record.buyerId,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update time_record
    set record_id = #{record.recordId,jdbcType=INTEGER},
      good_id = #{record.goodId,jdbcType=INTEGER},
      uptime = #{record.uptime,jdbcType=TIMESTAMP},
      downtime = #{record.downtime,jdbcType=TIMESTAMP},
      sailtime = #{record.sailtime,jdbcType=TIMESTAMP},
      buyer_id = #{record.buyerId,jdbcType=INTEGER}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.hzf.entity.TimeRecord" >
    update time_record
    <set >
      <if test="goodId != null" >
        good_id = #{goodId,jdbcType=INTEGER},
      </if>
      <if test="uptime != null" >
        uptime = #{uptime,jdbcType=TIMESTAMP},
      </if>
      <if test="downtime != null" >
        downtime = #{downtime,jdbcType=TIMESTAMP},
      </if>
      <if test="sailtime != null" >
        sailtime = #{sailtime,jdbcType=TIMESTAMP},
      </if>
      <if test="buyerId != null" >
        buyer_id = #{buyerId,jdbcType=INTEGER},
      </if>
    </set>
    where record_id = #{recordId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.hzf.entity.TimeRecord" >
    update time_record
    set good_id = #{goodId,jdbcType=INTEGER},
      uptime = #{uptime,jdbcType=TIMESTAMP},
      downtime = #{downtime,jdbcType=TIMESTAMP},
      sailtime = #{sailtime,jdbcType=TIMESTAMP},
      buyer_id = #{buyerId,jdbcType=INTEGER}
    where record_id = #{recordId,jdbcType=INTEGER}
  </update>
</mapper>